<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="marrtinox">
    <xacro:property name="pi" value="3.1416"/>
    <xacro:property name="b_height" value="0.18"/>
    <xacro:property name="b_width" value="0.30"/>
    <xacro:property name="b_length" value="0.30"/>
    <xacro:property name="b_mass" value="3"/>

    <xacro:property name="w_radius" value="0.06"/>
    <xacro:property name="w_height" value="0.02"/>
    <xacro:property name="w_height_offset" value="0.01"/>
    <xacro:property name="w_width_offset" value="0.01"/>
    <xacro:property name="w_length_offset" value="-0.07"/>
    <xacro:property name="w_mass" value="0.25"/>

    <xacro:property name="c_offset" value="0.035"/>
    <xacro:property name="c_radius" value="${(w_radius+w_height_offset)/2}"/>
    <xacro:property name="c_mass" value="0.15"/>

 

    <xacro:macro name="cylinder_inertia" params="m r h">
        <inertial>
            <mass value="${m}"/>
            <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
                        iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
                        izz="${m*r*r/2}" />
        </inertial>
    </xacro:macro>
  
    <xacro:macro name="box_inertia" params="m x y z">
        <inertial>
            <mass value="${m}"/>
            <inertia  ixx="${m*(y*y+z*z)/12}" ixy = "0" ixz = "0"
                        iyy="${m*(x*x+z*z)/12}" iyz = "0"
                        izz="${m*(x*x+z*z)/12}" />
        </inertial>
    </xacro:macro>
  
    <xacro:macro name="sphere_inertia" params="m r">
        <inertial>
            <mass value="${m}"/>
            <inertia  ixx="${2*m*r*r/5}" ixy = "0" ixz = "0"
                        iyy="${2*m*r*r/5}" iyz = "0"
                        izz="${2*m*r*r/5}" /> 
        </inertial>
    </xacro:macro>

    <xacro:include filename="marrtinox/laser.urdf.xacro"/>
    <xacro:include filename="marrtinox/camera3.urdf.xacro"/>
       <!-- Import Rviz colors -->
    <xacro:include filename="marrtinox//material.xacro" />

    <link name="base_footprint"/>
    
    <link name="base_link">
        <visual>
            <origin rpy="0 0 3.1415" xyz="0 -0.08 -0.18"/>
            <geometry>
                <!--<box size="${b_length} ${b_width} ${b_height}"/>-->
                <mesh filename="package://marrtinox_description/urdf/marrtinox/base.dae" scale="0.001 0.001 0.001" />
                  
            </geometry>
           

            

        </visual>
        <collision>
            <geometry>
                <box size="${b_length} ${b_width} ${b_height}"/>
            </geometry>
        </collision>
        <xacro:box_inertia m="${b_mass}" x="${b_length}" y="${b_width}" z="${b_height}"/>
    </link>

    <link name="left_wheel">
        <visual>
            <geometry>
                <cylinder length="${w_height}" radius="${w_radius}"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <cylinder length="${w_height}" radius="${w_radius}"/>
            </geometry>
        </collision>
        <xacro:cylinder_inertia m="${w_mass}" r="${w_radius}" h="${w_height}"/>
    </link>

    <link name="right_wheel">
        <visual>
            <geometry>
                <cylinder length="${w_height}" radius="${w_radius}"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <cylinder length="${w_height}" radius="${w_radius}"/>
            </geometry>
        </collision>
        <xacro:cylinder_inertia m="${w_mass}" r="${w_radius}" h="${w_height}"/>
    </link>

    <link name="caster_wheel">
        <visual>
            <geometry>
                <sphere radius="${c_radius}"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${c_radius}"/>
            </geometry>
        </collision>
        <xacro:sphere_inertia m="${c_mass}" r="${c_radius}"/>
    </link>

    <joint name="base_footprint_to_base_link" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link"/>
        <origin xyz="0 0 ${w_radius+w_height_offset+b_height/2}"/>
    </joint>
    
    <joint name="base_link_to_left_wheel" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel"/>
        <axis xyz="0 0 1"/>
        <origin xyz="${b_length/2+w_length_offset} ${+b_width/2+w_width_offset+w_height/2} ${-b_height/2-w_height_offset}" rpy="${-pi/2} 0 0"/>
    </joint>

    <joint name="base_link_to_right_wheel" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel"/>
        <axis xyz="0 0 -1"/>
        <origin xyz="${b_length/2+w_length_offset} ${-b_width/2-w_width_offset-w_height/2} ${-b_height/2-w_height_offset}" rpy="${pi/2} 0 0"/>
    </joint>

    <joint name="base_link_to_caster_wheel" type="fixed">
        <parent link="base_link"/>
        <child link="caster_wheel"/>
        <origin xyz="${-b_length/2+c_offset} 0 ${-c_radius-b_height/2}"/>
    </joint>

    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        </plugin>
    </gazebo>

    <gazebo reference="left_wheel">
        <mu1 value="200.0"/>
        <mu2 value="100.0"/>
        <kp value="10000000.0" />
        <kd value="1.0" />
        <material>Gazebo/Grey</material>
    </gazebo>
    <gazebo reference="right_wheel">
        <mu1 value="200.0"/>
        <mu2 value="100.0"/>
        <kp value="10000000.0" />
        <kd value="1.0" />
        <material>Gazebo/Grey</material>
    </gazebo>
    <gazebo reference="caster_wheel">
      <mu1 value="0.0"/>
      <mu2 value="0.0"/>
      <material>Gazebo/Grey</material>
    </gazebo>

    <transmission name="left_wheel_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="left_motor">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
        <joint name="base_link_to_left_wheel">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
    </transmission>

    <transmission name="right_wheel_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="right_motor">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
        <joint name="base_link_to_right_wheel">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
    </transmission>

</robot>
